<project name="dashboard" default="dist" basedir=".">
  <description>
    BUFR Validator Dashboard  - default target = dist
  </description>
  <property file="build.properties" />
  <!-- set global properties for this build -->
  <property name="src.home" location="src"/>
  <property name="build.home" location="build"/>
  <property name="dist.home" location="dist"/>
  <property name="web.home" location="web"/>
  <property name="lib.dir"     value="libs"/>
  <property name="tools.dir" location="tools"/>
  <property name="yui.compressor" value="${lib.dir}/yuicompressor-2.4.8.jar"/>
  <property name="html.compressor" value="${lib.dir}/htmlcompressor-1.5.3.jar"/>
    
  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.home}"/>
  </target>

  <!-- compress aus depends rausgenommen -->
  <target name="compile" depends="clean,init,prepare"
        description="compile the source">
    <!-- Compile Java classes as necessary -->
    <mkdir    dir="${build.home}/WEB-INF/classes"/>
    <javac includeantruntime="false" srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" classpathref="classpath">
      <compilerarg value="-Xdiags:verbose"/>
      <compilerarg value="-Xlint:all"/>
    </javac>
    <!-- Copy application resources -->
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>

  </target>

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <!--
    <mkdir dir="${dist.home}/lib"/>
    -->
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}"/>
  </target>

<!-- ==================== Deploy ================================== -->
<target name="deploy" depends="dist" description="Deploy on local server">
  <copy todir="${catalina.home}/webapps" file="${dist.home}/${app.name}.war"/>
</target>
  
<!--

  The "prepare" target is used to create the "build" destination directory,
  and copy the static contents of your web application to it.  If you need
  to copy static files from external dependencies, you can customize the
  contents of this task.

  Normally, this task is executed indirectly when needed.

-->

<!-- ==================== Deploy Openshift ================================== -->
<target name="deploy-oc" depends="dist" description="Openshift deployment">
   <exec executable="/bin/bash">
    <arg value="${tools.dir}/deploy-oc.sh"/>
    <arg value="${oc.username}"/>
    <arg value="${oc.password}"/>
    <arg value="${oc.appname}"/>
    <arg value="${dist.home}/${app.name}.war"/>
  </exec>
</target>


<!-- ==================== Prepare  ================================== -->

  <target name="prepare">

    <!-- Create build directories as needed -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/WEB-INF"/>
    <mkdir  dir="${build.home}/WEB-INF/classes"/>


    <!-- Copy static content of this web application -->
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>

    
    <!-- Copy external dependencies as required -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
    <mkdir  dir="${build.home}/WEB-INF/lib"/>

    <copy  todir="${build.home}/WEB-INF/lib">
      <fileset dir="${lib.dir}" excludes="servlet-api.jar,yuicompressor-2.4.8.jar,htmlcompressor-1.5.3.jar"/>
    </copy>

  </target>


<!-- ==================== Prepare  ================================== -->


  
  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

  <target name="compress" description="compress html/js/css files" depends="prepare"  if="${enable.compress}">
    <!-- Minimizing Javascript files -->
    <echo message="Compressing Javascript files at location: ${build.home}/*.js" />
    <apply executable="java" parallel="true">
      <!--
	  <arg line="-jar ${yui.compressor} -v -o '.js$:-min.js'"/>
      -->
      <arg line="-jar ${yui.compressor} -v -o '.js$:.js'"/>
      <fileset dir="${build.home}" includes="*.js"/>
    </apply>
    <apply executable="java" parallel="true">
      <arg line="-jar ${yui.compressor} -v -o '.css$:.css'"/>
      <fileset dir="${build.home}" includes="*.css"/>
    </apply>
    <apply executable="java">
      <arg line="-jar ${html.compressor} --compress-js --compress-css -t html -o ${build.home}"/>
      <fileset dir="${build.home}" includes="*.html"/>
    </apply>


  </target>
  
</project>
